// -----------------------------------------------------------------------------
// Functions
// -----------------------------------------------------------------------------

/// Convert pixels to ems

@function mq-px2em($px, $base-font-size: $base-font-size-for-sprite) {
    @if unitless($px) {
        @warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels.";
        @return mq-px2em($px + 0px); // That may fail.
    } @else if unit($px) == em {
        @return $px;
    }
    @return ($px / $base-font-size) * 1em;
}

/// Retrive an attributes value for a specific icon in the sprite map

@function sprite-attr($icon, $attr) {
	$newIcon: map-get($icons, $icon);
	@if $newIcon == null {
		@warn "Can't find an icon with the name #{$icon}";
	}
	@return map-get($newIcon, $attr);
}

@function sprite-png-attr($icon, $attr) {
	$newIcon: map-get($icons-png, $icon+'_png');
	@if $newIcon == null {
		@warn "Can't find an icon with the name #{$icon}";
	}
	@return map-get($newIcon, $attr);
}

/// Create a map with the specified icon of attributes

@function icon-attr($icon) {
	$attr: (
		width: sprite-attr($icon, width),
		height: sprite-attr($icon, height),
		x: sprite-attr($icon, backgroundX),
		y: sprite-attr($icon, backgroundY)
	);

	@return $attr;
}

@function icon-png-attr($icon) {
	$attr: (
		width: sprite-png-attr($icon, width),
		height: sprite-png-attr($icon, height),
		x: sprite-png-attr($icon, backgroundX),
		y: sprite-png-attr($icon, backgroundY)
	);

	@return $attr;
}

/// Get the width of an icon in em

@function icon_width($icon) {
	@return mq-px2em(sprite-attr($icon, width));
}

/// Get the height of an icon in em

@function icon_height($icon) {
	@return mq-px2em(sprite-attr($icon, height));
}
